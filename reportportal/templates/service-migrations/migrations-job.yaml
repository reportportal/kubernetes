apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "reportportal.fullname" . }}-migrations
  labels: {{ include "labels" . | indent 4 }}
spec:
  template:
    metadata:
      labels:
        {{- range $key, $value := .Values.migrations.podLabels }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
        component: {{ include "reportportal.fullname" . }}-migrations
      annotations:
        {{- range $key, $value := .Values.migrations.podAnnotations }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
    spec:
      restartPolicy: OnFailure
      {{- with .Values.migrations.affinity }}
      affinity:
        {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - env:
        - name: POSTGRES_SSLMODE
          value: "{{ .Values.database.ssl }}"
        - name: POSTGRES_SERVER
          value: {{ .Values.database.endpoint | default (printf "%s-postgresql.%s.svc.cluster.local" .Release.Name .Release.Namespace) }}
        - name: POSTGRES_DB
          value: "{{ .Values.database.dbName }}"
        - name: POSTGRES_PORT
          value: "{{ .Values.database.port }}"
        - name: POSTGRES_USER
          value: "{{ .Values.database.user }}"
        - name: POSTGRES_PASSWORD
        {{ if .Values.database.secretName }}
          valueFrom:
            secretKeyRef:
              name: "{{ .Values.database.secretName }}"
              key: "{{ .Values.database.passwordKeyName }}"
        {{ else }}
          value: "{{ .Values.database.password }}"
        {{ end }}
        image: "{{ include "reportportal.image" (dict "Values" .Values "service" "migrations") }}"
        imagePullPolicy: "{{ .Values.migrations.pullPolicy }}"
        name: migrations
        resources:
          requests:
            cpu: {{ .Values.migrations.resources.requests.cpu }}
            memory: {{ .Values.migrations.resources.requests.memory }}
          limits:
            cpu: {{ .Values.migrations.resources.limits.cpu }}
            memory: {{ .Values.migrations.resources.limits.memory }}
{{- if .Values.migrations.nodeSelector }}
      nodeSelector:
        {{- range $key, $value := .Values.migrations.nodeSelector }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
{{- end }}
      securityContext:
{{- include "reportportal.securityContext" (dict "Values" .Values "serviceContext" .Values.migrations.securityContext) | nindent 8 }}
      serviceAccountName: {{ .Values.migrations.serviceAccountName | default (include "reportportal.serviceAccountName" .) }}
{{- with .Values.global.tolerations }}
      tolerations: 
{{- toYaml . | nindent 8 }}
{{- else }}
{{- with .Values.migrations.tolerations }}
      tolerations: 
{{- toYaml . | nindent 8 }}
{{- end }}
{{- end }}
