{{- $path := .Values.ingress.path -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "reportportal.fullname" . }}-jobs
  labels: {{ include "labels" . | indent 4 }}
spec:
  replicas: {{ .Values.servicejobs.replicaCount | default 1 }}
  selector:
    matchLabels:
      component: {{ include "reportportal.fullname" . }}-jobs
  template:
    metadata:
      labels:
        {{- range $key, $value := .Values.servicejobs.podLabels }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
        component: {{ include "reportportal.fullname" . }}-jobs
      annotations:
        {{- range $key, $value := .Values.servicejobs.podAnnotations }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
    spec:
      initContainers:
      {{- if .Values.extraInitContainers }}
{{ toYaml .Values.extraInitContainers | indent 8 }}
      {{- end }}
      containers:
      - env:
{{- if .Values.servicejobs.extraEnvs }}
{{ toYaml .Values.servicejobs.extraEnvs | indent 8 }}
{{- end }}
        - name: SERVER_SERVLET_CONTEXT_PATH
          value: "{{ $path }}/jobs"
        - name: RP_ENVIRONMENT_VARIABLE_CLEAN_ATTACHMENT_CRON
          value: "{{ .Values.servicejobs.coreJobs.cleanAttachmentCron }}"
        - name: RP_ENVIRONMENT_VARIABLE_CLEAN_LOG_CRON
          value: "{{ .Values.servicejobs.coreJobs.cleanLogCron }}"
        - name: RP_ENVIRONMENT_VARIABLE_CLEAN_LAUNCH_CRON
          value: "{{ .Values.servicejobs.coreJobs.cleanLaunchCron }}"
        - name: RP_ENVIRONMENT_VARIABLE_CLEAN_STORAGE_CRON
          value: "{{ .Values.servicejobs.coreJobs.cleanStorageCron }}"
        - name: RP_ENVIRONMENT_VARIABLE_STORAGE_PROJECT_CRON
          value: "{{ .Values.servicejobs.coreJobs.storageProjectCron }}"
        - name: RP_ENVIRONMENT_VARIABLE_CLEAN_STORAGE_CHUNKSIZE
          value: "{{ .Values.servicejobs.chunksize }}"
        {{- if .Values.servicejobs.jvmArgs }}
        - name: JAVA_OPTS
          value: "{{ .Values.servicejobs.jvmArgs }}"
        {{- end }}
        - name: RP_AMQP_ANALYZER-VHOST
          value: "{{ .Values.rabbitmq.vhost }}"
        - name: RP_AMQP_PASS
        {{- if .Values.rabbitmq.SecretName }}
          valueFrom:
            secretKeyRef:
              name: "{{ .Values.rabbitmq.SecretName }}"
              key: "rabbitmq-password"
        {{- else }}
          value: "{{ .Values.rabbitmq.endpoint.password }}"
        {{- end }}
        - name: RP_AMQP_API_ADDRESS
          value: {{ ternary "https" "http" .Values.rabbitmq.endpoint.ssl }}://{{ .Values.rabbitmq.endpoint.apiuser }}:$(RP_AMQP_PASS)@{{ .Values.rabbitmq.endpoint.address }}:{{ .Values.rabbitmq.endpoint.apiport }}/api
        - name: RP_AMQP_ADDRESSES
          value: {{ ternary "amqps" "amqp" .Values.rabbitmq.endpoint.ssl }}://{{ .Values.rabbitmq.endpoint.user }}:$(RP_AMQP_PASS)@{{ .Values.rabbitmq.endpoint.address }}:{{ .Values.rabbitmq.endpoint.port }}
        - name: RP_DB_HOST
          value: "{{ .Values.postgresql.endpoint.address }}"
        - name: RP_DB_PORT
          value: "{{ .Values.postgresql.endpoint.port }}"
        - name: RP_DB_NAME
          value: "{{ .Values.postgresql.endpoint.dbName }}"
        {{- if .Values.postgresql.endpoint.connections }}
        - name: RP_DATASOURCE_MAXIMUMPOOLSIZE
          value: "{{ .Values.postgresql.endpoint.connections }}"
        {{- end }}
        - name: RP_DB_USER
          value: "{{ .Values.postgresql.endpoint.user }}"
        - name: RP_DB_PASS
        {{- if .Values.postgresql.SecretName }}
          valueFrom:
            secretKeyRef:
              name: "{{ .Values.postgresql.SecretName }}"
              key: "postgresql-password"
        {{- else }}
          value: "{{ .Values.postgresql.endpoint.password }}"
        {{- end }}
        {{- if .Values.minio.enabled }}
        - name: DATASTORE_TYPE
          value: "minio"
        - name: DATASTORE_MINIO_ENDPOINT
          value: "{{ .Values.minio.endpoint }}"
        {{- if .Values.minio.bucketPrefix }}
        - name: RP_BINARYSTORE_MINIO_BUCKETPREFIX
          value: "{{ .Values.minio.bucketPrefix }}"
        {{- end }}
        {{- if .Values.minio.defaultBucketName }}
        - name: RP_BINARYSTORE_MINIO_DEFAULTBUCKETNAME
          value: "{{ .Values.minio.defaultBucketName }}"
        {{- end }}
        {{- if .Values.minio.region }}
        - name: DATASTORE_MINIO_REGION
          value: "{{ .Values.minio.region }}"
        {{- end }}
        {{- if .Values.minio.secretName }}
        - name: DATASTORE_MINIO_ACCESSKEY
          valueFrom:
            secretKeyRef:
              name: "{{ .Values.minio.secretName }}"
              key: "{{ .Values.minio.accesskeyName }}"
        - name: DATASTORE_MINIO_SECRETKEY
          valueFrom:
            secretKeyRef:
              name: "{{ .Values.minio.secretName }}"
              key: "{{ .Values.minio.secretkeyName }}"
       {{- else }}
        - name: DATASTORE_MINIO_ACCESSKEY
          value: "{{ .Values.minio.accesskey }}"
        - name: DATASTORE_MINIO_SECRETKEY
          value: "{{ .Values.minio.secretkey }}"
       {{- end }}
       {{- end }}
        - name: RP_PROCESSING_LOG_MAXBATCHSIZE
          value: "2000"
        - name: RP_PROCESSING_LOG_MAXBATCHTIMEOUT
          value: "6000"
        - name: RP_AMQP_MAXLOGCONSUMER
          value: "1"
        - name: RP_ELASTICSEARCH_HOST
          value: "{{ .Values.elasticsearch.endpoint }}"
        {{- if .Values.elasticsearch.secretName }}
        - name: RP_ELASTICSEARCH_USERNAME
          valueFrom:
            secretKeyRef:
              name: "{{ .Values.elasticsearch.secretName }}"
              key: "username"
        - name: RP_ELASTICSEARCH_PASSWORD
          valueFrom:
            secretKeyRef:
              name: "{{ .Values.elasticsearch.secretName }}"
              key: "password"
        {{- else }}
        - name: RP_ELASTICSEARCH_USERNAME
          value: "{{ .Values.elasticsearch.user }}"
        - name: RP_ELASTICSEARCH_PASSWORD
          value: "{{ .Values.elasticsearch.password }}"
        {{- end }}
        image: "{{ .Values.servicejobs.repository }}:{{ .Values.servicejobs.tag }}"
        name: jobs
        ports:
        - containerPort: 8686
          protocol: TCP
        resources:
          requests:
            cpu: {{ .Values.servicejobs.resources.requests.cpu }}
            memory: {{ .Values.servicejobs.resources.requests.memory }}
          limits:
            cpu: {{ .Values.servicejobs.resources.limits.cpu }}
            memory: {{ .Values.servicejobs.resources.limits.memory }}
        {{- if .Values.servicejobs.readinessProbe }}
        {{- if .Values.servicejobs.readinessProbe.enabled }}
        readinessProbe:
          httpGet:
            path: "{{ $path }}/jobs/health"
            port: 8686
          initialDelaySeconds: {{ .Values.servicejobs.readinessProbe.initialDelaySeconds | default 60 }}
          periodSeconds: {{ .Values.servicejobs.readinessProbe.periodSeconds | default 40 }}
          timeoutSeconds: {{ .Values.servicejobs.readinessProbe.timeoutSeconds | default 5 }}
          failureThreshold: {{ .Values.servicejobs.readinessProbe.failureThreshold | default 10 }}
        {{- end }}
        {{- end }}
        {{- if .Values.servicejobs.livenessProbe }}
        {{- if .Values.servicejobs.livenessProbe.enabled }}
        livenessProbe:
          httpGet:
            path: "{{ $path }}/jobs/health"
            port: 8686
          initialDelaySeconds: {{ .Values.servicejobs.livenessProbe.initialDelaySeconds | default 60 }}
          periodSeconds: {{ .Values.servicejobs.livenessProbe.periodSeconds | default 40 }}
          timeoutSeconds: {{ .Values.servicejobs.livenessProbe.timeoutSeconds | default 5 }}
          failureThreshold: {{ .Values.servicejobs.livenessProbe.failureThreshold | default 10 }}
        {{- end }}
        {{- end }}
{{- if .Values.servicejobs.nodeSelector }}
      nodeSelector:
        {{- range $key, $value := .Values.servicejobs.nodeSelector }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
{{- end }}
      securityContext:
{{ toYaml .Values.servicejobs.securityContext | indent 8 }}
      serviceAccountName: {{ .Values.servicejobs.serviceAccountName }}
{{- with .Values.tolerations }}
      tolerations:
{{- toYaml . | nindent 8 }}
{{- end }}
