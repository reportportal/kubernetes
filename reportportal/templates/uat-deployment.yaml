apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "reportportal.fullname" . }}-uat
  labels: {{ include "labels" . | indent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      component: {{ include "reportportal.fullname" . }}-uat
  template:
    metadata:
      labels:
        component: {{ include "reportportal.fullname" . }}-uat
      annotations:
        {{- range $key, $value := .Values.uat.podAnnotations }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
    spec:
      containers:
      - env:
        {{ if .Values.uat.jvmArgs }}
        - name: JAVA_OPTS
          value: "{{ .Values.uat.jvmArgs }}"
        {{ end }}
        - name: RP_SESSION_LIVE
          value: "{{ .Values.uat.sessionLiveTime }}"
        - name: RP_DB_HOST
          value: "{{ .Values.postgresql.endpoint.address }}"
        - name: RP_DB_PORT
          value: "{{ .Values.postgresql.endpoint.port }}"
        - name: RP_DB_USER
          value: "{{ .Values.postgresql.endpoint.user }}"
        - name: RP_DB_PASS
        {{ if .Values.postgresql.SecretName }}
          valueFrom:
            secretKeyRef:
              name: "{{ .Values.postgresql.SecretName }}"
              key: "postgresql-password"
        {{ else }}
          value: "{{ .Values.postgresql.endpoint.password }}"
        {{ end }}
        {{ if .Values.minio.enabled }}
        - name: RP_BINARYSTORE_TYPE
          value: "minio"
        - name: RP_BINARYSTORE_MINIO_ENDPOINT
          value: "{{ .Values.minio.endpoint }}"
        {{ if .Values.minio.region }}
        - name: RP_BINARYSTORE_MINIO_REGION
          value: "{{ .Values.minio.region }}"
        {{ end }}
        {{ if .Values.minio.secretName }}
        - name: RP_BINARYSTORE_MINIO_ACCESSKEY
          valueFrom:
            secretKeyRef:
              name: "{{ .Values.minio.secretName }}"
              key: "access-key"
        - name: RP_BINARYSTORE_MINIO_SECRETKEY
          valueFrom:
            secretKeyRef:
              name: "{{ .Values.minio.secretName }}"
              key: "secret-key"
        {{ else }}
        - name: RP_BINARYSTORE_MINIO_ACCESSKEY
          value: "{{ .Values.minio.accesskey }}"
        - name: RP_BINARYSTORE_MINIO_SECRETKEY
          value: "{{ .Values.minio.secretkey }}"
        {{ end }}
        {{ if .Values.minio.bucketPrefix}}
        - name: RP_BINARYSTORE_MINIO_BUCKETPREFIX
          value: "{{ .Values.minio.bucketPrefix }}"
        {{ end }}
        {{ if .Values.minio.defaultBucketName}}
        - name: RP_BINARYSTORE_MINIO_DEFAULTBUCKETNAME
          value: "{{ .Values.minio.defaultBucketName }}"
        {{ end }}
        {{ if .Values.minio.integrationSaltPath }}
        - name: RP_INTEGRATION_SALT_PATH
          value: "{{ .Values.minio.integrationSaltPath }}"
        {{ end }}
        {{ end }}
        name: uat
        image: "{{ .Values.uat.repository }}:{{ .Values.uat.tag }}"
        ports:
        - containerPort: 9999
          protocol: TCP
        resources:
          requests:
            cpu: {{ .Values.uat.resources.requests.cpu }}
            memory: {{ .Values.uat.resources.requests.memory }}
          limits:
            cpu: {{ .Values.uat.resources.limits.cpu }}
            memory: {{ .Values.uat.resources.limits.memory }}
        readinessProbe:
          httpGet:
            path: "{{ .Values.rp.healthEndpoint }}"
            port: 9999
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 5
{{ include "nodeSelector" . | indent 8 }}
      securityContext:
{{ toYaml .Values.uat.securityContext | indent 8}}
      serviceAccountName: {{ .Values.uat.serviceAccountName }}
      tolerations:
{{- with .Values.tolerations }}
      tolerations: 
{{- toYaml . | nindent 8 }}
{{- end }}
