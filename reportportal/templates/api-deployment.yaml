apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "reportportal.fullname" . }}-api
  labels: {{ include "labels" . | indent 4 }}
spec:
  replicas: {{ .Values.serviceapi.replicaCount | default 1 }}
  selector:
    matchLabels:
      component: {{ include "reportportal.fullname" . }}-api
  template:
    metadata:
      labels:
        {{- range $key, $value := .Values.serviceapi.podLabels }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
        component: {{ include "reportportal.fullname" . }}-api
      annotations:
        {{- range $key, $value := .Values.serviceapi.podAnnotations }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
        "helm.sh/hook": post-install,post-upgrade
        "helm.sh/hook-weight": "5"
        "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    spec:
      initContainers:
      {{- if .Values.extraInitContainers }}
{{ toYaml .Values.extraInitContainers | indent 8 }}
      {{- end }}
      containers:
      - env:
{{- if .Values.serviceapi.extraEnvs }}
{{ toYaml .Values.serviceapi.extraEnvs | indent 8 }}
{{- end }}
        {{- if .Values.elasticsearch.doubleEntry.enable }}
        - name: RP_ELASTICSEARCHLOGMESSAGE_HOST
          value: "true"
        {{- end}}
        - name: LOGGING_LEVEL_ORG_HIBERNATE_SQL
          value: "info"
        - name: RP_REQUESTLOGGING
          value: "false"
        {{- if .Values.serviceapi.queues }}
        - name: RP_AMQP_QUEUES
          value: {{ .Values.serviceapi.queues.totalNumber | default "10" | quote }}
        - name: RP_AMQP_QUEUESPERPOD
          value: {{ .Values.serviceapi.queues.perPodNumber | default "10" | quote }}
        {{- else }}
        - name: RP_AMQP_QUEUES
          value: "10"
        - name: RP_AMQP_QUEUESPERPOD
          value: "10"
        {{- end }}
        {{- if .Values.serviceapi.jvmArgs }}
        - name: JAVA_OPTS
          value: "{{ .Values.serviceapi.jvmArgs }}"
        {{- end }}
        - name: RP_AMQP_ANALYZER-VHOST
          value: "{{ .Values.rabbitmq.vhost }}"
        - name: RP_AMQP_PASS
        {{- if .Values.rabbitmq.SecretName }}
          valueFrom:
            secretKeyRef:
              name: "{{ .Values.rabbitmq.SecretName }}"
              key: "rabbitmq-password"
        {{- else }}
          value: "{{ .Values.rabbitmq.auth.password }}"
        {{- end }}
        - name: RP_AMQP_API_ADDRESS
          value: {{ ternary "https" "http" .Values.rabbitmq.ssl }}://{{ .Values.rabbitmq.auth.username }}:$(RP_AMQP_PASS)@{{ .Values.rabbitmq.endpoint | default (printf "%s-rabbitmq.%s.svc.cluster.local" .Release.Name .Release.Namespace) }}:{{ .Values.rabbitmq.containerPorts.manager }}/api
        - name: RP_AMQP_ADDRESSES
          value: {{ ternary "amqps" "amqp" .Values.rabbitmq.ssl }}://{{ .Values.rabbitmq.auth.username }}:$(RP_AMQP_PASS)@{{ .Values.rabbitmq.endpoint | default (printf "%s-rabbitmq.%s.svc.cluster.local" .Release.Name .Release.Namespace) }}:{{ .Values.rabbitmq.containerPorts.amqp }}
        - name: RP_DB_HOST
          value: {{ .Values.postgresql.endpoint | default (printf "%s-postgresql.%s.svc.cluster.local" .Release.Name .Release.Namespace) }}
        - name: RP_DB_PORT
          value: "{{ .Values.postgresql.servicePort }}"
        - name: RP_DB_NAME
          value: "{{ .Values.postgresql.postgresqlDatabase }}"
        {{- if .Values.postgresql.postgresqlMaxConnections }}
        - name: RP_DATASOURCE_MAXIMUMPOOLSIZE
          value: "{{ .Values.postgresql.postgresqlMaxConnections }}"
        {{- end }}
        - name: RP_DB_USER
          value: "{{ .Values.postgresql.postgresqlUsername }}"
        - name: RP_DB_PASS
        {{- if .Values.postgresql.SecretName }}
          valueFrom:
            secretKeyRef:
              name: "{{ .Values.postgresql.SecretName }}"
              key: "postgresql-password"
        {{- else }}
          value: "{{ .Values.postgresql.postgresqlPassword }}"
        {{- end }}
        {{- if .Values.minio.enabled }}
        - name: RP_BINARYSTORE_TYPE
          value: "{{ .Values.minio.type }}"
        - name: RP_BINARYSTORE_MINIO_ENDPOINT
          value: "{{ .Values.minio.endpoint | default (printf "http://%s-minio.%s.svc.cluster.local:9000" .Release.Name .Release.Namespace) }}"
        {{- if .Values.minio.region }}
        - name: RP_BINARYSTORE_MINIO_REGION
          value: "{{ .Values.minio.region }}"
        {{- end }}
        {{- if .Values.minio.secretName }}
        - name: RP_BINARYSTORE_MINIO_ACCESSKEY
          valueFrom:
            secretKeyRef:
              name: "{{ .Values.minio.secretName }}"
              key: "{{ .Values.minio.accesskeyName }}"
        - name: RP_BINARYSTORE_MINIO_SECRETKEY
          valueFrom:
            secretKeyRef:
              name: "{{ .Values.minio.secretName }}"
              key: "{{ .Values.minio.secretkeyName }}"
       {{- else }}
        - name: RP_BINARYSTORE_MINIO_ACCESSKEY
          value: "{{ .Values.minio.accesskey }}"
        - name: RP_BINARYSTORE_MINIO_SECRETKEY
          value: "{{ .Values.minio.secretkey }}"
       {{- end }}
       {{- if .Values.minio.bucketPrefix }}
        - name: RP_BINARYSTORE_MINIO_BUCKETPREFIX
          value: "{{ .Values.minio.bucketPrefix }}"
       {{- end }}
       {{- if .Values.minio.defaultBucketName }}
        - name: RP_BINARYSTORE_MINIO_DEFAULTBUCKETNAME
          value: "{{ .Values.minio.defaultBucketName }}"
       {{- end }}
       {{- if .Values.minio.integrationSaltPath }}
        - name: RP_INTEGRATION_SALT_PATH
          value: "{{ .Values.minio.integrationSaltPath }}"
       {{- end }}
       {{- end }}
        - name: MANAGEMENT_HEALTH_ELASTICSEARCH_ENABLED
          value: "false"
        image: "{{ .Values.serviceapi.repository }}:{{ .Values.serviceapi.tag }}"
        name: api
        ports:
        - containerPort: 8585
          protocol: TCP
        resources:
          requests:
            cpu: {{ .Values.serviceapi.resources.requests.cpu }}
            memory: {{ .Values.serviceapi.resources.requests.memory }}
          limits:
            cpu: {{ .Values.serviceapi.resources.limits.cpu }}
            memory: {{ .Values.serviceapi.resources.limits.memory }}
        {{- if .Values.serviceapi.readinessProbe }}
        {{- if .Values.serviceapi.readinessProbe.enabled }}
        readinessProbe:
          httpGet:
            path: "{{ .Values.rp.healthEndpoint }}"
            port: 8585
          initialDelaySeconds: {{ .Values.serviceapi.readinessProbe.initialDelaySeconds | default 30 }}
          periodSeconds: {{ .Values.serviceapi.readinessProbe.periodSeconds | default 20 }}
          timeoutSeconds: {{ .Values.serviceapi.readinessProbe.timeoutSeconds | default 3 }}
          failureThreshold: {{ .Values.serviceapi.readinessProbe.failureThreshold | default 20 }}
        {{- end }}
        {{- end }}
        {{- if .Values.serviceapi.livenessProbe }}
        {{- if .Values.serviceapi.livenessProbe.enabled }}
        livenessProbe:
          httpGet:
            path: "{{ .Values.rp.healthEndpoint }}"
            port: 8585
          initialDelaySeconds: {{ .Values.serviceapi.livenessProbe.initialDelaySeconds | default 30 }}
          periodSeconds: {{ .Values.serviceapi.livenessProbe.periodSeconds | default 20 }}
          timeoutSeconds: {{ .Values.serviceapi.livenessProbe.timeoutSeconds | default 5 }}
          failureThreshold: {{ .Values.serviceapi.livenessProbe.failureThreshold | default 5 }}
        {{- end }}
        {{- end }}
        volumeMounts:
          {{- if .Values.serviceapi.secret.enabled }}
          - mountPath: {{ .Values.serviceapi.secret.mountPath }}
            name: {{ template "reportportal.name" . }}-serviceapi-secret
            readOnly: {{ .Values.serviceapi.secret.readOnly }}
          {{- end }}
{{- if .Values.serviceapi.nodeSelector }}
      nodeSelector:
        {{- range $key, $value := .Values.serviceapi.nodeSelector }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
{{- end }}
      securityContext:
{{- toYaml .Values.serviceapi.securityContext | indent 8 }}
      serviceAccountName: {{ .Values.serviceapi.serviceAccountName }}
{{- with .Values.tolerations }}
      tolerations:
{{- toYaml . | nindent 8 }}
{{- end }}
      volumes:
        {{- if .Values.serviceapi.secret.enabled }}
        - name: {{ template "reportportal.name" . }}-serviceapi-secret
          secret:
            secretName: {{ template "reportportal.name" . }}-serviceapi-secret
        {{- end }}
