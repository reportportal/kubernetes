apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "reportportal.fullname" . }}-ui
  labels: {{ include "labels" . | indent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      component: {{ include "reportportal.fullname" . }}-ui
  template:
    metadata:
      labels:
        {{- range $key, $value := .Values.serviceui.podLabels }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
        component: {{ include "reportportal.fullname" . }}-ui
      annotations:
        {{- range $key, $value := .Values.serviceui.podAnnotations }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
    spec:
      initContainers:
      {{- if .Values.extraInitContainers }}
{{ toYaml .Values.extraInitContainers | indent 8 }}
      {{- end }}
      containers:
      - name: {{ $.Values.serviceui.name | default "ui" }}
        image: "{{ .Values.serviceui.image.repository }}:{{ .Values.serviceui.image.tag }}"
        imagePullPolicy: "{{ .Values.serviceui.pullPolicy }}"
        env:
        - name: RP_SERVER_PORT
          value: "8080"
        ports:
        - containerPort: 8080
          protocol: TCP
        resources:
          requests:
            cpu: {{ .Values.serviceui.resources.requests.cpu }}
            memory: {{ .Values.serviceui.resources.requests.memory }}
          limits:
            cpu: {{ .Values.serviceui.resources.limits.cpu }}
            memory: {{ .Values.serviceui.resources.limits.memory }}
        readinessProbe:
          httpGet:
            path: "/ui/health"
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 3
        #TODO: delete volumeMounts after release new service-ui version
        volumeMounts:
          - name: ui-nginx-conf
            mountPath: /etc/nginx/nginx.conf
            subPath: nginx.conf
            readOnly: true
      #TODO: delete volumes after release new service-ui version
      volumes:
      - name: ui-nginx-conf
        configMap:
          name: ui-nginx-conf
          items:
            - key: nginx.conf
              path: nginx.conf
{{- if .Values.serviceui.nodeSelector }}
      nodeSelector:
        {{- range $key, $value := .Values.serviceui.nodeSelector }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
{{- end }}
      securityContext:
{{ toYaml .Values.serviceui.securityContext | indent 8}}
      serviceAccountName: {{ .Values.serviceui.serviceAccountName | default (include "reportportal.serviceAccountName" .) }}
{{- with .Values.tolerations }}
      tolerations: 
{{- toYaml . | nindent 8 }}
{{- end }}
